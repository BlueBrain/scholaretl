{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to Scholaretl","text":"<p>This package is an SDK (software development kit) that allows for easy parsing of scientific articles from different sources.</p> <p>Here are all the pages:   - Examples   - Endpoints   - Application Setup   - Reference</p>"},{"location":"endpoints/","title":"Endpoints","text":""},{"location":"endpoints/#parsing","title":"Parsing","text":""},{"location":"endpoints/#response-format","title":"Response Format","text":"<p>The response format of every parsing endpoint is the same and represents the article with a json schema.</p> <pre><code>{\n  \"title\": \"This is the title of the article.\",\n  \"authors\": [\n    \"Author 1\",\n    \"Author 2\",\n    \"Author 3\"\n  ],\n  \"abstract\": [\n    \"This is the paragraph 1 of the abstract.\", \n    \"This is the paragraph 2 of the abstract.\"\n  ],\n  \"section_paragraphs\": [\n    [\"Section 1\", \"Paragraph 1\"],\n    [\"Section 2\", \"Paragraph 2\"]\n  ],\n  \"pubmed_id\": \"PUBMED_ID\",\n  \"pmc_id\": \"PMC_ID\",\n  \"arxiv_id\": \"ARXIV_ID\",\n  \"doi\": \"DOI\",\n  \"uid\": \"UNIQUE_ID\",\n  \"date\": \"2017-03-01\",\n  \"journal\": \"JOURNAL\",\n  \"figures\": [\n    \"Figure 1\",\n    \"Figure 2\"\n  ],\n  \"tables\": [\n    \"Table 1\",\n    \"Table 2\"\n  ],\n  \"article_type\": \"Article Type\"\n}\n</code></pre>"},{"location":"endpoints/#fields-properties","title":"Fields properties","text":"Fields parameter Description <code>title</code> Title of this article. <code>authors</code> A list of authors. <code>abstract</code> The list of paragraphs of the abstract for this article. <code>section_paragraphs</code> The list of paragraphs with their corresponding section name. <code>pubmed_id</code> A unique identifier used in the PubMed database. <code>pmc_id</code> A unique identifier used in the PubMed Central (PMC) database. <code>arxiv_id</code> A unique identifier used in the ArXiv ID database. <code>doi</code> Digital Object Identifier of this article. <code>uid</code> Unique identifier of this article given based on the hash of the file. <code>date</code> Publication date of this article. <code>journal</code> The journal International Standard Serial Number of the article. <code>figures</code> Figures list. <code>tables</code> Tables list. <code>article_type</code> Type of the article."},{"location":"endpoints/#parsing-xmls","title":"Parsing XMLs","text":""},{"location":"endpoints/#calling-the-endpoint","title":"Calling the endpoint","text":"<p>All XMLs parsing endpoints are following the same schema.  One just needs to specify/change the right schema at the end of the endpoint path.</p> cURLPython <pre><code>curl --location 'https://localhost/parse/jats_xml' \\\n--form 'inp=@\"jats_article.xml\"'\n</code></pre> <pre><code>import requests\nimport json\n\nurl = \"https://localhost/parse/jats_xml\"\n\nfiles = [\n    (\n        \"inp\",\n        (\n            \"jats_article.xml\",\n            open(\"jats_article.xml\", \"rb\"),\n            \"text/xml\",\n        ),\n    )\n]\n\nresponse = requests.request(\"POST\", url, files=files)\n\nprint(response.json())\n</code></pre>"},{"location":"endpoints/#schemas","title":"Schemas","text":""},{"location":"endpoints/#jats-xml","title":"JATS XML","text":"<p>If one needs to parse an article following the JATS-XML schema, this is the endpoint that has to be used.  This is the case of scientific papers coming from Pubmed Central (PMC). </p>"},{"location":"endpoints/#pubmed-xml","title":"PubMed XML","text":"<p>If one needs to parse an article following the PubMed schema, this is the endpoint that has to be used.  This is the case of scientific papers coming from PubMed. Note that  the pubmed xml files contain only the abstract. The field <code>section_paragraphs</code> is going to be empty.</p>"},{"location":"endpoints/#tei-xml","title":"TEI XML","text":"<p>If one needs to parse an article following the TEI-XML schema, this is the endpoint that has to be used.  This is the case of scientific papers coming from ArXiv. This is also the schema returned by Grobid server.</p>"},{"location":"endpoints/#xocs-xml","title":"XOCS XML","text":"<p>If one needs to parse an article following the XOCS-XML schema, this is the endpoint that has to be used.  This is the case of scientific papers coming from scopus. </p>"},{"location":"endpoints/#parsing-pdfs","title":"Parsing PDFs","text":"<p>The package contains two endpoints to parse PDFs (PyPDF and Grobid).</p>"},{"location":"endpoints/#pypdf","title":"PyPDF","text":""},{"location":"endpoints/#calling-the-endpoint_1","title":"Calling the endpoint","text":"cURLPython <pre><code>curl --location 'https://localhost/parse/pypdf' \\\n--form 'inp=@\"article.pdf\"'\n</code></pre> <pre><code>import requests\nimport json\n\nurl = \"https://localhost/parse/pypdf\"\n\nfiles = [\n    (\n        \"inp\",\n        (\n            \"test.pdf\",\n            open(test_data_path / \"test.pdf\", \"rb\"),\n            \"application/pdf\",\n        ),\n    )\n]\n\n# This line is not mandatory, but user can change the chunk_size if wanted.\ndata = {\"chunk_size\": 500}\nresponse = requests.request(\"POST\", url, files=files, data=data)\n\nprint(response.json())\n</code></pre>"},{"location":"endpoints/#grobid-pdf","title":"Grobid PDF","text":""},{"location":"endpoints/#calling-the-endpoint_2","title":"Calling the endpoint","text":"cURLPython <pre><code>curl --location 'https://localhost/parse/grobidpdf' \\\n--form 'inp=@\"article.pdf\"'\n</code></pre> <pre><code>import requests\nimport json\n\nurl = \"https://localhost/parse/grobidpdf\"\n\nfiles = [\n    (\n        \"inp\",\n        (\n            \"test.pdf\",\n            open(test_data_path / \"test.pdf\", \"rb\"),\n            \"application/pdf\",\n        ),\n    )\n]\n# This line is not mandatory, but user can change the parameters if wanted.\ndata = {\"data\": '{\"param1\": \"value1\", \"param2\": \"value2\"}'}\n\nresponse = requests.request(\"POST\", url, files=files, data=data)\n\nprint(response.json())\n</code></pre>"},{"location":"examples/","title":"Examples","text":""},{"location":"reference/","title":"Reference","text":"<p>This is just a demo of how it could be used. See https://mkdocstrings.github.io/ for all the details.</p> <p>Possible objects to pull the docs from. <pre><code>::: scholaretl.module\n::: scholaretl.subpackage.module\n::: scholaretl.module.class\n</code></pre></p>"},{"location":"setup/","title":"Application Setup","text":"<p>If one wants to run the application locally, it is needed to setup some environment variables first through the CLI or an <code>.env</code> file.</p>"},{"location":"setup/#optional-environment-variables","title":"Optional environment variables","text":"<p>Here is the list of environment variables that can be set up:</p>"},{"location":"setup/#related-to-grobid","title":"Related to Grobid","text":"<p>To be able to use the endpoint <code>/parse/grobid_pdf</code>, it is needed to setup the environment variable <code>SCHOLARETL__GROBID__URL</code>. </p>"},{"location":"setup/#related-to-the-logging","title":"Related to the logging","text":"<ul> <li><code>SCHOLARETL__LOGGING__LEVEL</code>: the logging level of the application and the <code>scholaretl</code> package logging. By default, the value is <code>info</code>.</li> <li><code>SCHOLARETL__LOGGING__EXTERNAL_PACKAGES</code>: the logging level of the external packages. By default, the value is <code>warning</code>.</li> </ul>"}]}