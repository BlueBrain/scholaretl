name: CI

on:
  pull_request:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      debug_enabled:
        description: "Run the build with tmate debugging enabled"
        required: false

jobs:
  linting:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel previous workflows that are still running
        uses: styfle/cancel-workflow-action@0.8.0
        with:
          access_token: ${{ github.token }}
      - name: Checkout latest commit
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # fetch all history with version tags
      - name: Set up python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: Set up pip cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ matrix.tox-env }}-${{ runner.os }}
      - name: Set up environment
        run: |
          pip install --upgrade pip wheel setuptools
          pip install bandit[toml]==1.7.4 ruff==0.5.5
      - name: Linting check
        run: |
          bandit -qr -c pyproject.toml src/
          ruff check src/ tests/
          ruff format --check src/ tests
  unit-tests:
    runs-on: ${{ matrix.os }}
    env:
      PIP_CACHE_DIR: .cache/pip
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.10"]
    steps:
      - name: Cancel previous workflows that are still running
        uses: styfle/cancel-workflow-action@0.8.0
        with:
          access_token: ${{ github.token }}
      - name: Checkout latest commit
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # fetch all history with version tags
      - name: Set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Set up pip cache
        uses: actions/cache@v2
        with:
          path: .cache/pip
          key: ${{ matrix.tox-env }}-${{ matrix.os }}
      - name: Set up environment
        run: |
          pip install --upgrade pip
          pip install mypy==1.8.0
          pip install -e ".[dev,external]"
      - name: Running mypy and tests
        run: |
          mypy src/
          pytest --color=yes -m "not real_request"
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Configure Git Credentials
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - run: echo "cache_id=$(date --utc '+%V')" >> $GITHUB_ENV
      - uses: actions/cache@v4
        with:
          key: mkdocs-material-${{ env.cache_id }}
          path: .cache
          restore-keys: |
            mkdocs-material-
      - name: Build the documentation
        run: |
            pip install mkdocs-material mkdocstrings[python]
            mkdocs gh-deploy --force
